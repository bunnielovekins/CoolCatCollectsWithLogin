@model CoolCatCollects.Models.UsedPurchaseModel

@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>Used Purchase</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Id)

	<div class="form-group">
		@Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.SourceUsername, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.SourceUsername, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.SourceUsername, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control js-price" } })
			@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.PaymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.PaymentMethod, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.PaymentMethod, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Receipt, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			<div class="checkbox">
				@Html.EditorFor(model => model.Receipt)
				@Html.ValidationMessageFor(model => model.Receipt, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.DistanceTravelled, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.DistanceTravelled, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DistanceTravelled, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Postage, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.Postage, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Postage, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control js-weight" } })
			@Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.PricePerKilo, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			<div class="input-group">
				@Html.EditorFor(model => model.PricePerKilo, new { htmlAttributes = new { @class = "form-control js-ppk" } })
				<span class="input-group-btn">
					<button class="btn btn-default js-calculate" type="button">Calculate</button>
				</span>
			</div>
			@Html.ValidationMessageFor(model => model.PricePerKilo, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.CompleteSets, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			<div class="checkbox">
				@Html.EditorFor(model => model.CompleteSets)
				@Html.ValidationMessageFor(model => model.CompleteSets, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-4">
			@Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-4">
			<input type="submit" value="Save" class="btn btn-default" />
		</div>
	</div>
</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
