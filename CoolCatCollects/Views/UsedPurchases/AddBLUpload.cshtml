@model CoolCatCollects.Models.UsedPurchaseBLUploadModel

@{
	ViewBag.Title = "AddBLUpload";
}

<h2>AddBLUpload</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.Hidden("UsedPurchaseId", TempData["id"])

	<div class="form-horizontal">
		<h4>Used Purchase BL Upload</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-4">
				@Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Parts, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-4">
				@Html.EditorFor(model => model.Parts, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Parts, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Lots, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-4">
				@Html.EditorFor(model => model.Lots, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Lots, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-4">
				@Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-4">
				@Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-4">
				<input type="submit" value="Create" class="btn btn-primary" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Contents", new { id = TempData["id"] })
</div>

@section scripts{
	<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
	<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
	<script>
		$(function () {
			$('input[type=datetime]').datepicker({
				dateFormat: "yy-mm-dd"
			});
		});
	</script>
}