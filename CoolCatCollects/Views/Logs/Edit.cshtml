@model CoolCatCollects.Models.LogModel
@{
	var dropdown = new List<SelectListItem>
	{
		new SelectListItem { Text = "Select", Disabled = true, Selected = true, Value = "" },
		new SelectListItem { Value = "eBay", Text = "eBay", Selected = Model.Category == "eBay" },
		new SelectListItem { Value = "Bricklink", Text = "Bricklink", Selected = Model.Category == "Bricklink" },
		new SelectListItem { Value = "Process", Text = "Process", Selected = Model.Category == "Process" },
		new SelectListItem { Value = "Stock", Text = "Stock", Selected = Model.Category == "Stock" },
		new SelectListItem { Value = "Bricklink Orders", Text = "Bricklink Orders", Selected = Model.Category == "Bricklink Orders" },
		new SelectListItem { Value = "eBay Orders", Text = "eBay Orders", Selected = Model.Category == "Bricklink Orders" },
		new SelectListItem { Value = "Other", Text = "Other", Selected = Model.Category == "Other" }
	};
}

<h2>Edit Log @Model.Id</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)
		@Html.HiddenFor(model => model.Date)

		<div class="form-group">
			@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.FurtherNote, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.FurtherNote, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.FurtherNote, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Category, dropdown, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-primary" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-default" })
</div>
