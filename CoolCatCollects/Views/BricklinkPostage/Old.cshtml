@model CoolCatCollects.Bricklink.Models.OrdersModel
@{
	ViewBag.Title = "Bricklink Orders for Postage";

	var sizeOptions = new List<SelectListItem>
{
		new SelectListItem { Text = "Large Letter", Value = "large letter" },
		new SelectListItem { Text = "Parcel", Value = "parcel" }
	};

	var shippingMethodsDomestic = new List<SelectListItem>
{
		new SelectListItem { Text = "RM 48", Value = "CRL48" },
		new SelectListItem { Text = "RM 24", Value = "CRL24" },
		new SelectListItem { Text = "RM 2nd Signed For", Value = "BPR2" },
		new SelectListItem { Text = "RM 1st Signed For", Value = "BPR1" },
		new SelectListItem { Text = "RM 1st", Value = "BPL1" },
		new SelectListItem { Text = "RM 2nd", Value = "BPL2" },
		new SelectListItem { Text = "Special Delivery Guaranteed by 1pm - £750", Value = "SD1" },
		new SelectListItem { Text = "Special Delivery Guaranteed by 9am - £750", Value = "SD4" },
		new SelectListItem { Text = "Tracked 24", Value = "TPN24" },
		new SelectListItem { Text = "Tracked 48", Value = "TPS48" }
	};

	var shippingMethodsIntl = new List<SelectListItem>
{
		new SelectListItem { Text = "Intl Standard", Value = "OLA" },
		new SelectListItem { Text = "Intl Economy", Value = "OLS" },
		new SelectListItem { Text = "Intl Tracked £50 comp", Value = "OTA" },
		new SelectListItem { Text = "Intl Tracked £250 comp", Value = "OTB" },
		new SelectListItem { Text = "Intl Tracked & Signed £50 comp", Value = "OTC" },
		new SelectListItem { Text = "Intl Tracked & Signed £250 comp", Value = "OTD" }
	};

	SelectList GetShippingMethods(CoolCatCollects.Bricklink.Models.OrderModel model)
	{
		return Select(model.InternationalOrder ?
			shippingMethodsIntl :
			shippingMethodsDomestic, model.ShippingMethod);
	}

	SelectList Select(List<SelectListItem> items, string selected)
	{
		return new SelectList(items, "Value", "Text", selected);
	}
}

<h2>Bricklink Orders for Postage</h2>

@using (Html.BeginForm("Export", "BricklinkPostage"))
{
	<input type="submit" value="Export" class="btn btn-primary" />
	<br />
	<br />
	<table class="table table-striped table-bordered table-hover">
		<thead>
			<tr>
				<th>Selected</th>
				<th>Order Id</th>
				<th>Buyer Name</th>
				<th>Total</th>
				<th>Weight (kg)</th>
				<th>Size</th>
				<th>Shipping Method</th>
			</tr>
		</thead>
		<tbody>
			@for (int i = 0; i < Model.Orders.Count(); i++)
			{
				<tr>
					@Html.HiddenFor(o => Model.Orders[i].OrderId)
					<td>
						@Html.CheckBoxFor(o => Model.Orders[i].Selected)
					</td>
					<td>@Model.Orders[i].OrderId</td>
					<td>
						@Model.Orders[i].Username<br />
						(@HttpUtility.HtmlDecode(Model.Orders[i].RealName))
					</td>
					<td>@Model.Orders[i].Total</td>
					<td style="width: 100px;">@Html.TextBoxFor(o => Model.Orders[i].Weight, new { @class = "form-control" })</td>
					<td style="width: 150px;">@Html.DropDownListFor(o => Model.Orders[i].PackageSize, Select(sizeOptions, Model.Orders[i].PackageSize), new { @class = "form-control" })</td>
					<td style="width: 340px;">@Html.DropDownListFor(o => Model.Orders[i].ShippingMethod, GetShippingMethods(Model.Orders[i]), new { @class = "form-control" })</td>
				</tr>
			}
		</tbody>
	</table>
}
